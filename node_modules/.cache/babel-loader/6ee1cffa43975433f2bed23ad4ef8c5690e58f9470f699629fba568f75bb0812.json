{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\kanban-board\\\\kanban-board\\\\src\\\\components\\\\KanbanBoard.js\";\nimport React from 'react';\nimport Card from './Card';\nimport './KanbanBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KanbanBoard({\n  tickets,\n  selectedGroup,\n  selectedSort,\n  users\n}) {\n  // Grouping logic\n  const groupedTickets = tickets.reduce((groups, ticket) => {\n    const groupKey = selectedGroup === 'user' ? users.find(user => user.id === ticket.userId).name : ticket[selectedGroup];\n    if (!groups[groupKey]) {\n      groups[groupKey] = [];\n    }\n    groups[groupKey].push(ticket);\n    return groups;\n  }, {});\n\n  // Sorting logic for grouped tickets\n  const sortedGroups = Object.keys(groupedTickets).reduce((sorted, groupKey) => {\n    sorted[groupKey] = sortTickets(groupedTickets[groupKey], selectedSort);\n    return sorted;\n  }, {});\n\n  // Implement the sortTickets function\n  function sortTickets(ticketsToSort, sortKey) {\n    if (sortKey === 'priority') {\n      return ticketsToSort.slice().sort((a, b) => b.priority - a.priority);\n    } else if (sortKey === 'title') {\n      return ticketsToSort.slice().sort((a, b) => a.title.localeCompare(b.title));\n    }\n    // Handle other sorting options here\n    return ticketsToSort;\n    // Return the sorted array of tickets\n  }\n\n  let columnOrder = [];\n  if (selectedGroup === 'priority') {\n    columnOrder = [4, 3, 2, 1, 0]; // Order of priority levels\n  } else if (selectedGroup === 'user') {\n    columnOrder = users.map(user => user.name);\n  } else if (selectedGroup === 'status') {\n    columnOrder = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: columnOrder.map(columnKey => {\n      var _sortedGroups$columnK;\n      //const ticketStatus = columnKey; // Declare the ticketStatus here\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedGroup === 'priority' ? getPriorityLabel(columnKey) : columnKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), (_sortedGroups$columnK = sortedGroups[columnKey]) === null || _sortedGroups$columnK === void 0 ? void 0 : _sortedGroups$columnK.sort((a, b) => {\n          if (selectedGroup === 'priority') {\n            return b.priority - a.priority;\n          } else if (selectedSort === 'title') {\n            return a.title.localeCompare(b.title);\n          }\n          return 0;\n        }).map(ticket => /*#__PURE__*/_jsxDEV(Card, {\n          ticket: ticket,\n          selectedGroup: selectedGroup,\n          selectedSort: selectedSort,\n          users: users,\n          ticketStatus: ticket.status\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))]\n      }, columnKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = KanbanBoard;\nexport default KanbanBoard;\nfunction getPriorityLabel(priorityValue) {\n  switch (priorityValue) {\n    case 4:\n      return 'Urgent';\n    case 3:\n      return 'High';\n    case 2:\n      return 'Medium';\n    case 1:\n      return 'Low';\n    case 0:\n      return 'No priority';\n    default:\n      return '';\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","KanbanBoard","tickets","selectedGroup","selectedSort","users","groupedTickets","reduce","groups","ticket","groupKey","find","user","id","userId","name","push","sortedGroups","Object","keys","sorted","sortTickets","ticketsToSort","sortKey","slice","sort","a","b","priority","title","localeCompare","columnOrder","map","className","children","columnKey","_sortedGroups$columnK","getPriorityLabel","fileName","_jsxFileName","lineNumber","columnNumber","ticketStatus","status","_c","priorityValue","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/kanban-board/kanban-board/src/components/KanbanBoard.js"],"sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\nimport './KanbanBoard.css';\r\n\r\nfunction KanbanBoard({ tickets, selectedGroup, selectedSort, users }) {\r\n  // Grouping logic\r\n  const groupedTickets = tickets.reduce((groups, ticket) => {\r\n    const groupKey = selectedGroup === 'user' ? users.find(user => user.id === ticket.userId).name : ticket[selectedGroup];\r\n    if (!groups[groupKey]) {\r\n      groups[groupKey] = [];\r\n    }\r\n    groups[groupKey].push(ticket);\r\n    return groups;\r\n  }, {});\r\n\r\n  // Sorting logic for grouped tickets\r\n  const sortedGroups = Object.keys(groupedTickets).reduce((sorted, groupKey) => {\r\n    sorted[groupKey] = sortTickets(groupedTickets[groupKey], selectedSort);\r\n    return sorted;\r\n  }, {});\r\n  \r\n    // Implement the sortTickets function\r\n    function sortTickets(ticketsToSort, sortKey) {\r\n        if (sortKey === 'priority') {\r\n            return ticketsToSort.slice().sort((a, b) => b.priority - a.priority);\r\n          } else if (sortKey === 'title') {\r\n            return ticketsToSort.slice().sort((a, b) => a.title.localeCompare(b.title));\r\n          }\r\n          // Handle other sorting options here\r\n          return ticketsToSort;\r\n          // Return the sorted array of tickets\r\n    }\r\n\r\n    let columnOrder = [];\r\n\r\n  if (selectedGroup === 'priority') {\r\n    columnOrder = [4, 3, 2, 1, 0]; // Order of priority levels\r\n  } else if (selectedGroup === 'user') {\r\n    columnOrder = users.map(user => user.name);\r\n  } else if (selectedGroup === 'status') {\r\n    columnOrder = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\r\n  }\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {columnOrder.map(columnKey => {\r\n        //const ticketStatus = columnKey; // Declare the ticketStatus here\r\n        return (\r\n          <div key={columnKey} className=\"column\">\r\n            <h2>{selectedGroup === 'priority' ? getPriorityLabel(columnKey) : columnKey}</h2>\r\n            {sortedGroups[columnKey]?.sort((a, b) => {\r\n              if (selectedGroup === 'priority') {\r\n                return b.priority - a.priority;\r\n              } else if (selectedSort === 'title') {\r\n                return a.title.localeCompare(b.title);\r\n              }\r\n              return 0;\r\n            }).map(ticket => (\r\n              <Card\r\n                key={ticket.id}\r\n                ticket={ticket}\r\n                selectedGroup={selectedGroup}\r\n                selectedSort={selectedSort}\r\n                users={users} \r\n                ticketStatus={ticket.status}\r\n              />\r\n            ))}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n  \r\n\r\n}\r\n\r\nexport default KanbanBoard;\r\n\r\nfunction getPriorityLabel(priorityValue) {\r\n  switch (priorityValue) {\r\n    case 4:\r\n      return 'Urgent';\r\n    case 3:\r\n      return 'High';\r\n    case 2:\r\n      return 'Medium';\r\n    case 1:\r\n      return 'Low';\r\n    case 0:\r\n      return 'No priority';\r\n    default:\r\n      return '';\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}